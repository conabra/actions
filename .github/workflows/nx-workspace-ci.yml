on:
  workflow_call:
    inputs:
      target-matrix: 
        required: true
        type: string
      target-command:
        required: true
        type: string
        description: | 
          The target command to be executed. Note that it must have a {0} to be replaced by the <matrix>.
          Example: 'npx nx run {0}:build --prod'
      node-version:
        required: false
        type: string
        default: 16
      runs-on:
        required: false
        type: string
        default: ubuntu-latest
      # We needed this input in order to be able to configure out integration tests for this repo, it is not documented
      # so as to not cause confusion/add noise, but technically any consumer of the workflow can use it if they want to.
      working-directory:
        required: false
        type: string
    outputs:
      affected:
        description: "List of the affected projects"
        value: ${{ jobs.workspace.outputs.affected }}
        
concurrency:
  group: ci-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  project:
    name: project (${{ matrix.project }})
    runs-on: ${{ inputs.runs-on }}
    strategy:
      fail-fast: false
      matrix: 
        project: ${{ fromJSON(inputs.target-matrix) }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory || github.workspace }}
        # Specify shell to help normalize across different operating systems
        shell: bash
    steps:
      - name: Checkout [Main]
        uses: actions/checkout@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0

      - name: Checkout [Pull Request]
        uses: actions/checkout@v3
        if: ${{ github.event_name == 'pull_request' }}
        with:
          # By default, PRs will be checked-out based on the Merge Commit, but we want the actual branch HEAD.
          ref: ${{ github.event.pull_request.head.sha }}
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
        
      - name: Set node/npm/yarn versions
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          
      - name: Use the node_modules cache if available
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ inputs.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ inputs.node-version }}-yarn-

      - name: Execute target command
        run: |
          ${{ format(inputs.target-command, matrix.project) }}
